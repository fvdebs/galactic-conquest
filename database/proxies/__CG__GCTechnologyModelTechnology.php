<?php

namespace Inferno\DoctrineProxies\__CG__\GC\Technology\Model;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Technology extends \GC\Technology\Model\Technology implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'GC\\Technology\\Model\\Technology' . "\0" . 'technologyId', '' . "\0" . 'GC\\Technology\\Model\\Technology' . "\0" . 'name', '' . "\0" . 'GC\\Technology\\Model\\Technology' . "\0" . 'description', '' . "\0" . 'GC\\Technology\\Model\\Technology' . "\0" . 'featureKey', '' . "\0" . 'GC\\Technology\\Model\\Technology' . "\0" . 'isAllianceTechnology', '' . "\0" . 'GC\\Technology\\Model\\Technology' . "\0" . 'isPlayerTechnology', '' . "\0" . 'GC\\Technology\\Model\\Technology' . "\0" . 'isGalaxyTechnology', '' . "\0" . 'GC\\Technology\\Model\\Technology' . "\0" . 'metalCost', '' . "\0" . 'GC\\Technology\\Model\\Technology' . "\0" . 'crystalCost', '' . "\0" . 'GC\\Technology\\Model\\Technology' . "\0" . 'metalProduction', '' . "\0" . 'GC\\Technology\\Model\\Technology' . "\0" . 'crystalProduction', '' . "\0" . 'GC\\Technology\\Model\\Technology' . "\0" . 'ticksToBuild', '' . "\0" . 'GC\\Technology\\Model\\Technology' . "\0" . 'faction', '' . "\0" . 'GC\\Technology\\Model\\Technology' . "\0" . 'technologyConditions', '' . "\0" . 'GC\\Technology\\Model\\Technology' . "\0" . 'universe'];
        }

        return ['__isInitialized__', '' . "\0" . 'GC\\Technology\\Model\\Technology' . "\0" . 'technologyId', '' . "\0" . 'GC\\Technology\\Model\\Technology' . "\0" . 'name', '' . "\0" . 'GC\\Technology\\Model\\Technology' . "\0" . 'description', '' . "\0" . 'GC\\Technology\\Model\\Technology' . "\0" . 'featureKey', '' . "\0" . 'GC\\Technology\\Model\\Technology' . "\0" . 'isAllianceTechnology', '' . "\0" . 'GC\\Technology\\Model\\Technology' . "\0" . 'isPlayerTechnology', '' . "\0" . 'GC\\Technology\\Model\\Technology' . "\0" . 'isGalaxyTechnology', '' . "\0" . 'GC\\Technology\\Model\\Technology' . "\0" . 'metalCost', '' . "\0" . 'GC\\Technology\\Model\\Technology' . "\0" . 'crystalCost', '' . "\0" . 'GC\\Technology\\Model\\Technology' . "\0" . 'metalProduction', '' . "\0" . 'GC\\Technology\\Model\\Technology' . "\0" . 'crystalProduction', '' . "\0" . 'GC\\Technology\\Model\\Technology' . "\0" . 'ticksToBuild', '' . "\0" . 'GC\\Technology\\Model\\Technology' . "\0" . 'faction', '' . "\0" . 'GC\\Technology\\Model\\Technology' . "\0" . 'technologyConditions', '' . "\0" . 'GC\\Technology\\Model\\Technology' . "\0" . 'universe'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Technology $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getTechnologyId(): int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getTechnologyId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTechnologyId', []);

        return parent::getTechnologyId();
    }

    /**
     * {@inheritDoc}
     */
    public function getMetalProduction(): int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMetalProduction', []);

        return parent::getMetalProduction();
    }

    /**
     * {@inheritDoc}
     */
    public function setMetalProduction(int $metalProduction): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMetalProduction', [$metalProduction]);

        parent::setMetalProduction($metalProduction);
    }

    /**
     * {@inheritDoc}
     */
    public function getCrystalProduction(): int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCrystalProduction', []);

        return parent::getCrystalProduction();
    }

    /**
     * {@inheritDoc}
     */
    public function setCrystalProduction(int $crystalProduction): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCrystalProduction', [$crystalProduction]);

        parent::setCrystalProduction($crystalProduction);
    }

    /**
     * {@inheritDoc}
     */
    public function getName(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setName(string $name): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', [$name]);

        parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', []);

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription(string $description): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', [$description]);

        parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getFeatureKey(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFeatureKey', []);

        return parent::getFeatureKey();
    }

    /**
     * {@inheritDoc}
     */
    public function setFeatureKey(?string $featureKey): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFeatureKey', [$featureKey]);

        parent::setFeatureKey($featureKey);
    }

    /**
     * {@inheritDoc}
     */
    public function isAllianceTechnology(): bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isAllianceTechnology', []);

        return parent::isAllianceTechnology();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsAllianceTechnology(bool $isAllianceTechnology): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsAllianceTechnology', [$isAllianceTechnology]);

        parent::setIsAllianceTechnology($isAllianceTechnology);
    }

    /**
     * {@inheritDoc}
     */
    public function isPlayerTechnology(): bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isPlayerTechnology', []);

        return parent::isPlayerTechnology();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsPlayerTechnology(bool $isPlayerTechnology): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsPlayerTechnology', [$isPlayerTechnology]);

        parent::setIsPlayerTechnology($isPlayerTechnology);
    }

    /**
     * {@inheritDoc}
     */
    public function isGalaxyTechnology(): bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isGalaxyTechnology', []);

        return parent::isGalaxyTechnology();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsGalaxyTechnology(bool $isGalaxyTechnology): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsGalaxyTechnology', [$isGalaxyTechnology]);

        parent::setIsGalaxyTechnology($isGalaxyTechnology);
    }

    /**
     * {@inheritDoc}
     */
    public function getMetalCost(): int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMetalCost', []);

        return parent::getMetalCost();
    }

    /**
     * {@inheritDoc}
     */
    public function setMetalCost(int $metalCost): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMetalCost', [$metalCost]);

        parent::setMetalCost($metalCost);
    }

    /**
     * {@inheritDoc}
     */
    public function getCrystalCost(): int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCrystalCost', []);

        return parent::getCrystalCost();
    }

    /**
     * {@inheritDoc}
     */
    public function setCrystalCost(int $crystalCost): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCrystalCost', [$crystalCost]);

        parent::setCrystalCost($crystalCost);
    }

    /**
     * {@inheritDoc}
     */
    public function getTicksToBuild(): int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTicksToBuild', []);

        return parent::getTicksToBuild();
    }

    /**
     * {@inheritDoc}
     */
    public function setTicksToBuild(int $ticksToBuild): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTicksToBuild', [$ticksToBuild]);

        parent::setTicksToBuild($ticksToBuild);
    }

    /**
     * {@inheritDoc}
     */
    public function getFaction(): \GC\Faction\Model\Faction
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFaction', []);

        return parent::getFaction();
    }

    /**
     * {@inheritDoc}
     */
    public function setFaction(\GC\Faction\Model\Faction $faction): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFaction', [$faction]);

        parent::setFaction($faction);
    }

    /**
     * {@inheritDoc}
     */
    public function getUniverse(): \GC\Universe\Model\Universe
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUniverse', []);

        return parent::getUniverse();
    }

    /**
     * {@inheritDoc}
     */
    public function addTechnologyCondition(\GC\Technology\Model\Technology $targetTechnology): \GC\Technology\Model\TechnologyCondition
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addTechnologyCondition', [$targetTechnology]);

        return parent::addTechnologyCondition($targetTechnology);
    }

    /**
     * {@inheritDoc}
     */
    public function getTechnologyConditions(): array
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTechnologyConditions', []);

        return parent::getTechnologyConditions();
    }

    /**
     * {@inheritDoc}
     */
    public function calculateMetalIncomePerDay(): int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'calculateMetalIncomePerDay', []);

        return parent::calculateMetalIncomePerDay();
    }

    /**
     * {@inheritDoc}
     */
    public function calculateCrystalIncomePerDay(): int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'calculateCrystalIncomePerDay', []);

        return parent::calculateCrystalIncomePerDay();
    }

}
